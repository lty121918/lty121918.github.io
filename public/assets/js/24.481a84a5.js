(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{567:function(t,a,_){"use strict";_.r(a);var v=_(12),s=Object(v.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"tcp-ip协议族按层次分为以下四层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip协议族按层次分为以下四层"}},[t._v("#")]),t._v(" TCP/IP协议族按层次分为以下四层")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/20220202214600.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"确保可靠性的tcp协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#确保可靠性的tcp协议"}},[t._v("#")]),t._v(" 确保可靠性的TCP协议")]),t._v(" "),_("p",[_("strong",[t._v("按层次分，TCP位于传输层，提供可靠的字节流服务")])]),t._v(" "),_("blockquote",[_("p",[t._v("所谓字节流服务是指，为了方便传输，将大块的数据分割成以报文段为单位的数据包进行管理。")])]),t._v(" "),_("p",[t._v("为了准确无误将数据送达某处，TCP协议采用了三次握手策略，用TCP协议把数据包送出去后，TCP不会对传送后的情况置之不理，它一定会向对方确认是否成功送达。")]),t._v(" "),_("h3",{attrs:{id:"三次握手"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),_("p",[t._v("握手过程中使用了TCP的标志（flag）——SYN（synchronize）和ACK（acknowledgement）")]),t._v(" "),_("blockquote",[_("p",[t._v("synchronize 使同步; (使)同步，在时间上一致，同速进行;")]),t._v(" "),_("p",[t._v("acknowledgement 确认; 感谢; (对事实、现实、存在的)承认; 谢礼; 收件复函; 致谢，鸣谢;")])]),t._v(" "),_("p",[t._v("发送端首先发送一个带有SYN标志的数据包给对方。接收端收到后，回传带有SYN/ACK标志的数据包以示传达确认信息。最后，发送端再回传一个带有ACK标志的数据包，代表“握手”结束。")]),t._v(" "),_("p",[t._v("若在握手过程中某个阶段莫名中断，TCP协议会再次以相同的顺序发送相同的数据包。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/image-20220110234446209.png",alt:""}})]),t._v(" "),_("p",[t._v("除了三次握手，TCP协议还有其他各种手段来保证通信的可靠性。")]),t._v(" "),_("h2",{attrs:{id:"负责域名解析的dns服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负责域名解析的dns服务"}},[t._v("#")]),t._v(" 负责域名解析的DNS服务")]),t._v(" "),_("p",[_("strong",[t._v("DNS服务是和HTTP协议一样位于应用层的协议。它提供域名到IP地址之间的解析服务")]),t._v("。")]),t._v(" "),_("p",[_("strong",[t._v("DNS协议提供通过域名查找IP地址，或逆向从IP地址发查域名的服务。")])]),t._v(" "),_("h2",{attrs:{id:"http是不保存状态的协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http是不保存状态的协议"}},[t._v("#")]),t._v(" HTTP是不保存状态的协议")]),t._v(" "),_("p",[t._v("HTTP是一种不保存状态，即无状态协议。HTTP协议自身不对请求和响应之间的通信状态进行保存。也就是说在HTTP这个级别，协议对于发送过的请求或响应都不做持久化处理，HTTP协议自身不具备保存之前发送过的请求或者响应的功能。")]),t._v(" "),_("p",[t._v("HTTP1.1虽然是无状态协议，但是为了实现期望的保持功能，于是引入了Cookie技术。")]),t._v(" "),_("h2",{attrs:{id:"http1-1中可使用的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http1-1中可使用的方法"}},[t._v("#")]),t._v(" HTTP1.1中可使用的方法")]),t._v(" "),_("h3",{attrs:{id:"get-获取资源"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#get-获取资源"}},[t._v("#")]),t._v(" GET：获取资源")]),t._v(" "),_("h3",{attrs:{id:"post-传输实体主题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#post-传输实体主题"}},[t._v("#")]),t._v(" POST：传输实体主题")]),t._v(" "),_("h3",{attrs:{id:"put-传输文件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#put-传输文件"}},[t._v("#")]),t._v(" PUT：传输文件")]),t._v(" "),_("p",[t._v("鉴于HTTP/1.1的PUT方法自身不带验证机制，任何人都可以上传文件，存在安全性问题，因此一般的Web网站不使用该方法。")]),t._v(" "),_("h3",{attrs:{id:"head-获得报文首部-获得通信状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#head-获得报文首部-获得通信状态"}},[t._v("#")]),t._v(" HEAD：获得报文首部（获得通信状态）")]),t._v(" "),_("p",[t._v("HEAD方法和GET方法一样，只是不返回报文主体部分。用于确认URI的有效性及资源更新的日期时间等。")]),t._v(" "),_("h3",{attrs:{id:"delete-删除文件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#delete-删除文件"}},[t._v("#")]),t._v(" DELETE：删除文件")]),t._v(" "),_("p",[t._v("与PUT方法一样不带验证机制，所以一般网站也不使用DELETE方法。")]),t._v(" "),_("h3",{attrs:{id:"options-询问支持的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#options-询问支持的方法"}},[t._v("#")]),t._v(" OPTIONS：询问支持的方法")]),t._v(" "),_("p",[t._v("OPTIONS方法用来查询针对请求URI指定资源的方法。")]),t._v(" "),_("h3",{attrs:{id:"trace-追踪路径"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#trace-追踪路径"}},[t._v("#")]),t._v(" TRACE：追踪路径")]),t._v(" "),_("p",[t._v("TRACE方法是让Web服务器端将之前的请求通信环回给客户的方法。客户端通过TRACE方法可以查询发送出去的请求是怎样被加工/篡改的。但是因为TRACE本来就不常用，再加上它容易引发XST攻击，通常就更不会用到了。")]),t._v(" "),_("h3",{attrs:{id:"connect-要求用隧道协议连接代理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#connect-要求用隧道协议连接代理"}},[t._v("#")]),t._v(" CONNECT：要求用隧道协议连接代理")]),t._v(" "),_("p",[t._v("CONNECT方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行TCP通信。主要使用SSL安全套接层和TLS传输层安全协议把通信内容加密后经网络隧道传输。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/image-20220112230158080.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"http状态码"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http状态码"}},[t._v("#")]),t._v(" HTTP状态码")]),t._v(" "),_("h3",{attrs:{id:"状态码的类别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#状态码的类别"}},[t._v("#")]),t._v(" 状态码的类别")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/image-20220115182031227.png",alt:""}})]),t._v(" "),_("h3",{attrs:{id:"_2xx-成功"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2xx-成功"}},[t._v("#")]),t._v(" 2XX 成功")]),t._v(" "),_("p",[t._v("200：客户端发来的请求在服务端被正常处理。")]),t._v(" "),_("p",[t._v("204：表示该服务接收的请求已经成功处理，但在返回的响应报文中不含实体的主体部分。一般只在需要从客户端往服务端发送信息，对客户端不需要发送新信息内容的情况下使用。")]),t._v(" "),_("p",[t._v("206：表示客户端进行了范围请求，而服务器成功执行了这部分GET请求。")]),t._v(" "),_("h3",{attrs:{id:"_3xx-重定向"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3xx-重定向"}},[t._v("#")]),t._v(" 3XX 重定向")]),t._v(" "),_("blockquote",[_("p",[t._v("3XX响应结果表明浏览器需要执行某些特殊的处理以正确处理请求。")])]),t._v(" "),_("p",[t._v("301：永久性重定向。该状态码表示请求的资源已经被分配了新的URI，以后应使用资源现在所指的URI。")]),t._v(" "),_("p",[t._v("302：临时重定向。该状态码表示请求的资源已经被分配给了新的URI，希望用户本次能够使用新的URI访问。")]),t._v(" "),_("p",[t._v("303：该状态码表示由于请求对应的资源存在着另一个URI，应使用GET方法定向获取请求的资源。（明确使用GET方法获得资源，与302有所区别）")]),t._v(" "),_("p",[t._v("304：表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但未满足条件的情况。304状态码返回时，不包含任何响应的主体部分。304虽然被划分在3XX当中，但是和重定向没有关系。")]),t._v(" "),_("p",[t._v("307：临时重定向。该状态码与302有着相同的意义。")]),t._v(" "),_("h3",{attrs:{id:"_4xx-客户端错误"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4xx-客户端错误"}},[t._v("#")]),t._v(" 4XX 客户端错误")]),t._v(" "),_("p",[t._v("400：表示请求报文中存在语法错误。当错误发生时，需修改请求的内容后再次发送请求。另外，浏览器回向200 OK一样对待该状态码。")]),t._v(" "),_("p",[t._v("401：该状态码发送的请求需要有通过HTTP认证的认证信息。另外若之前已经进行过1次请求，则表示用户认证失败。")]),t._v(" "),_("p",[t._v("403：表示对请求资源的访问被服务器拒绝了。未获得文件系统的访问授权、访问权限等情况都可能是发生403的原因。")]),t._v(" "),_("p",[t._v("404：表示服务器上无法找到请求的资源。除此之外，也可以在服务端拒绝请求且不想说明理由时使用。")]),t._v(" "),_("h3",{attrs:{id:"_5xx-服务器错误"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5xx-服务器错误"}},[t._v("#")]),t._v(" 5XX 服务器错误")]),t._v(" "),_("p",[t._v("500：表示服务器在执行请求时发生了错误。也有可能是Web应用存在的bug或某些临时的故障。")]),t._v(" "),_("p",[t._v("503：表示服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。")]),t._v(" "),_("h2",{attrs:{id:"与http协作的web服务器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#与http协作的web服务器"}},[t._v("#")]),t._v(" 与HTTP协作的Web服务器")]),t._v(" "),_("p",[t._v("在互联网上，域名通过DNS服务映射到IP地址（域名解析）之后访问目标网站。")]),t._v(" "),_("h3",{attrs:{id:"通信数据转发程序-代理、网关、隧道"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#通信数据转发程序-代理、网关、隧道"}},[t._v("#")]),t._v(" 通信数据转发程序：代理、网关、隧道")]),t._v(" "),_("ul",[_("li",[t._v("代理服务器的基本行为就是接收客户端发送的请求后转发给其他服务器。代理不改变请求URI，会直接发送给前方持有资源的目标服务器。")]),t._v(" "),_("li",[t._v("网关工作机制与代理十分相似。而网关能使通信线路上的服务器提供非HTTP协议服务。（可以提高通信安全性）")]),t._v(" "),_("li",[t._v("隧道可按要求简历起一条与其他服务器连接的线路，使用SSL等手段进行加密。隧道的目的是确保客户端和服务端进行安全的通信。")])]),t._v(" "),_("h2",{attrs:{id:"http-1-1首部字段一览"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1首部字段一览"}},[t._v("#")]),t._v(" HTTP/1.1首部字段一览")]),t._v(" "),_("h3",{attrs:{id:"通用首部字段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#通用首部字段"}},[t._v("#")]),t._v(" 通用首部字段")]),t._v(" "),_("p",[t._v("指请求报文和响应报文双方都会使用的首部。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/image-20220122135441449.png",alt:""}})]),t._v(" "),_("h3",{attrs:{id:"请求首部字段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#请求首部字段"}},[t._v("#")]),t._v(" 请求首部字段")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/image-20220122135453783.png",alt:""}})]),t._v(" "),_("h3",{attrs:{id:"响应首部字段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#响应首部字段"}},[t._v("#")]),t._v(" 响应首部字段")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/image-20220122141312126.png",alt:""}})]),t._v(" "),_("h3",{attrs:{id:"实体首部字段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实体首部字段"}},[t._v("#")]),t._v(" 实体首部字段")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/image-20220122141333624.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"https"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),_("p",[t._v("HTTP协议中没有加密机制，但可以通过SSL安全套接层或TLS安全传输协议的组合使用，加密HTTP的通信内容。")]),t._v(" "),_("p",[t._v("与SSL组合使用的HTTP被称为HTTPS（HTTP Secure，超文本传输安全协议）或HTTP over SSL。")]),t._v(" "),_("p",[_("strong",[t._v("HTTPS也存在一些问题，就是使用SSL的时候，速度会比HTTP慢，SSL的慢分两种，一种是指通信慢。另一种是指由于大量消耗CPU及内存等资源，导致处理速度变慢。")])]),t._v(" "),_("p",[t._v("不一直使用HTTPS的原因是：加密通信会消耗更多的CPU及内存资源，另一方面是节省购买证书的开销。")]),t._v(" "),_("h2",{attrs:{id:"基于http的功能追加协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基于http的功能追加协议"}},[t._v("#")]),t._v(" 基于HTTP的功能追加协议")]),t._v(" "),_("h3",{attrs:{id:"基于http的协议"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基于http的协议"}},[t._v("#")]),t._v(" 基于HTTP的协议")]),t._v(" "),_("p",[t._v("HTTP功能上的不足可以创建一套全新的协议来补充。可是目前基于\nHTTP的Web浏览器的使用环境已经遍布全球，因此无法完全抛弃HTTP。")]),t._v(" "),_("p",[_("strong",[t._v("HTTP标准的瓶颈：")])]),t._v(" "),_("ul",[_("li",[t._v("一条连接上只可发送一个请求")]),t._v(" "),_("li",[t._v("请求只能从客户端开始。客户端不可以接收除响应以外的指令。")]),t._v(" "),_("li",[t._v("请求/响应首部未经压缩就发送。首部信息越多延迟越大。")]),t._v(" "),_("li",[t._v("发送冗长的首部。每次互相发送的的相同首部造成的浪费较多。")]),t._v(" "),_("li",[t._v("可任意选择数据压缩格式。非强制压缩发送。")])]),t._v(" "),_("h3",{attrs:{id:"消除http瓶颈的spdy"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#消除http瓶颈的spdy"}},[t._v("#")]),t._v(" 消除HTTP瓶颈的SPDY")]),t._v(" "),_("p",[t._v("开发目标：解决HTTP的性能瓶颈，缩短Web页面的加载时间。\n（50%）")]),t._v(" "),_("p",[t._v("SPDY没有完全改写HTTP协议，而是在TCP/IP的应用层与运输层之间通过新加会话层的形式运作。同时，考虑到安全性问题，sPDY规定通信中使用SSL。")]),t._v(" "),_("p",[t._v("使用SPDY之后，HTTP协议额外获得以下功能：")]),t._v(" "),_("ol",[_("li",[t._v("多路复用流")]),t._v(" "),_("li",[t._v("赋予请求优先级")]),t._v(" "),_("li",[t._v("压缩HTTP首部")]),t._v(" "),_("li",[t._v("推送功能")]),t._v(" "),_("li",[t._v("服务器提示功能")])]),t._v(" "),_("h3",{attrs:{id:"使用浏览器进行全双工通信的websocket"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用浏览器进行全双工通信的websocket"}},[t._v("#")]),t._v(" 使用浏览器进行全双工通信的WebSocket")]),t._v(" "),_("p",[_("strong",[t._v("WebSocket，即Web浏览器与Web服务器之间全双工通信标准。")])]),t._v(" "),_("p",[t._v("一旦Web服务器与客户端之间建立起WebSocket协议进行通信连接，之后所有的通信都依靠这个专用协议进行。通信过程中可互相发送JSON、XML、HTML或图片等任意格式的数据。")]),t._v(" "),_("p",[_("strong",[t._v("WebSocket协议的主要特点：")])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("推送功能")]),t._v(" "),_("p",[t._v("服务器可以直接发送数据，而不必等待而客户端的请求。")])]),t._v(" "),_("li",[_("p",[t._v("减少通信量")]),t._v(" "),_("p",[t._v("只要建立起WebSocket连接，就希望一直保持连接状态。而且WebSocket的首部信息很小，通信量也相应减少。")])])]),t._v(" "),_("h3",{attrs:{id:"http-2-0"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-2-0"}},[t._v("#")]),t._v(" HTTP/2.0")]),t._v(" "),_("p",[t._v("书中时间是12年，2.0尚未正式发布。")]),t._v(" "),_("p",[t._v("目标：改善用户在使用Web时的速度体验。")]),t._v(" "),_("h3",{attrs:{id:"web服务器管理文件的webdav"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#web服务器管理文件的webdav"}},[t._v("#")]),t._v(" Web服务器管理文件的WebDAV")]),t._v(" "),_("p",[t._v("基于万维往的分布式创作和版本控制，是一个可对Web服务器上的内容直接进行文件复制、编辑等操作的分布式文件系统。作为扩展HTTP/1.1的协议定义在RFC4918。")]),t._v(" "),_("p",[t._v("具有创建文件、删除文件、文件创建者管理、文件编辑过程中禁止其他用户内容覆盖的加锁功能，以及对文件内容修改的版本控制功能。")]),t._v(" "),_("h2",{attrs:{id:"web的攻击技术"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#web的攻击技术"}},[t._v("#")]),t._v(" Web的攻击技术")]),t._v(" "),_("p",[t._v("对Web应用的攻击模式有两种：")]),t._v(" "),_("ul",[_("li",[t._v("主动攻击：SQL注入攻击和OS命令注入攻击")]),t._v(" "),_("li",[t._v("被动攻击：跨站脚本攻击XXS、跨站请求伪造CSRF、HTTP首部注入攻击")])]),t._v(" "),_("p",[t._v("其他攻击：会话劫持、目录遍历攻击、邮件首部注入攻击、会话固定攻击、点击攻击、DOS攻击")])])}),[],!1,null,null,null);a.default=s.exports}}]);