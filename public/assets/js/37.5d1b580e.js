(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{579:function(t,s,a){"use strict";a.r(s);var n=a(12),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),a("p",[t._v("在 JS 中共有 "),a("code",[t._v("8")]),t._v(" 种数据类型，分别为：Number、String、Boolean、undefined、object、Null、Symbol、 bigInt")]),t._v(" "),a("p",[t._v("其中 "),a("code",[t._v("Symbol")]),t._v(" 和 "),a("code",[t._v("BigInt")]),t._v(" 是 ES6 新增的数据类型，可能会被单独问：")]),t._v(" "),a("ul",[a("li",[t._v("Symbol 代表独一无二的值，最大的用法是用来定义对象的唯一属性名。")]),t._v(" "),a("li",[t._v("BigInt 可以表示任意大小的整数。")])]),t._v(" "),a("p",[a("strong",[t._v("基本类型、引用类型")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本类型（值类型）：除Object。 String、Number、boolean、null、undefined，存储在栈里。")])]),t._v(" "),a("li",[a("p",[t._v("引用类型：object。里面包含的 function、Array、Date，储存在栈和堆里，。")])]),t._v(" "),a("li",[a("p",[t._v("引用类型存储：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/ekzodia_lty/blog-image/raw/master/img/20220318140915.png",alt:""}})])])]),t._v(" "),a("h2",{attrs:{id:"判断数据类型的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断数据类型的方法"}},[t._v("#")]),t._v(" 判断数据类型的方法")]),t._v(" "),a("p",[a("strong",[t._v("typeof")]),t._v("：能判断所有"),a("strong",[t._v("值类型，函数")]),t._v("。不可对 "),a("strong",[t._v("null、对象、数组")]),t._v("进行精确判断，因为都返回 "),a("code",[t._v("object")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//number")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("blockquote",[a("p",[t._v('typeof null === "object"; 的问题')]),t._v(" "),a("p",[t._v("《你不知道的JavaScript》——\n正确的返回结果应该是 “null”，但这个 bug 由来已久，在 JavaScript 中已经存在了将近 二十年，也许永远也不会修复，因为这牵涉到太多的 Web 系统，“修复”它会产生更多的 bug，令许多系统无法正常工作。")])]),t._v(" "),a("p",[a("strong",[t._v("instanceof")]),t._v("：能判断"),a("strong",[t._v("对象")]),t._v("类型，不能判断基本数据类型，"),a("strong",[t._v("其内部运行机制是判断在其原型链中能否找到该类型的原型")]),t._v("。其实现就是顺着"),a("strong",[t._v("原型链")]),t._v("去找，如果能找到对应的 "),a("code",[t._v("Xxxxx.prototype")]),t._v(" 即为 "),a("code",[t._v("true")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("constructor")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("Object.prototype.toString.call()")]),t._v("：所有原始数据类型都是能判断的，还有 "),a("strong",[t._v("Error 对象，Date 对象")]),t._v("等。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Number]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object String]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Boolean]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Undefined]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Null]"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Math]"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h2",{attrs:{id:"严格模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[t._v("#")]),t._v(" 严格模式")]),t._v(" "),a("p",[t._v("'use strict'")]),t._v(" "),a("ul",[a("li",[t._v("全局变量必须声明  n=1;//error")]),t._v(" "),a("li",[t._v("禁用with")]),t._v(" "),a("li",[t._v("创建eval作用域")]),t._v(" "),a("li",[t._v("禁止this指向window")]),t._v(" "),a("li",[t._v("函数参数名不能重复")])]),t._v(" "),a("h2",{attrs:{id:"null-和-undefined-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-和-undefined-有什么区别"}},[t._v("#")]),t._v(" null 和 undefined 有什么区别？")]),t._v(" "),a("p",[t._v("undefined 是没有定义的，null 是定义了但是为空。")]),t._v(" "),a("h2",{attrs:{id:"和-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[t._v("#")]),t._v(" ==和===的区别")]),t._v(" "),a("p",[t._v('"==="叫做严格运算符，"=="叫做相等运算符。')]),t._v(" "),a("p",[t._v('"=="会造成 类型转换,如果两个参数中一个为null，另一个为undefined，那么返回true')]),t._v(" "),a("p",[t._v('"==="只要类型不一致，它就直接返回false,如果两个参数中一个为null，另一个为undefined，那么返回false')]),t._v(" "),a("h2",{attrs:{id:"es6新特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6新特性"}},[t._v("#")]),t._v(" ES6新特性")]),t._v(" "),a("p",[t._v("let和const命令，字符串模板，结构表达式，箭头函数，对象里的函数属性简写，数组的map和reduce方法，扩展运算符，promise，set和map，Generator函数，for…of循环。")]),t._v(" "),a("h2",{attrs:{id:"var-let-const的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-let-const的区别"}},[t._v("#")]),t._v(" var,let,const的区别")]),t._v(" "),a("p",[t._v("let和var的区别：")]),t._v(" "),a("ul",[a("li",[t._v("let声明的范围是块作用域，而var声明的范围是函数作用域；")]),t._v(" "),a("li",[t._v("let声明的变量不会在作用域中被提升，会出现暂时性死区；")]),t._v(" "),a("li",[t._v("let不允许同一个块级作用域中出现冗余声明；")]),t._v(" "),a("li",[t._v("var在全局作用域中声明的变量会成为windows对象的属性，而let不会。")])]),t._v(" "),a("p",[t._v("const和let的区别：")]),t._v(" "),a("ul",[a("li",[t._v("cosnt声明变量的同时必须初始化变量，且修改const声明的变量会导致运行错误；")]),t._v(" "),a("li",[t._v("如果cosnt变量引用的是一个对象，那么可以修改这个对象的内部属性；")])]),t._v(" "),a("h2",{attrs:{id:"暂时性死区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暂时性死区"}},[t._v("#")]),t._v(" 暂时性死区")]),t._v(" "),a("p",[t._v("在解析代码时，JavaScript引擎也会注意出现在块后面的let声明，只不过在此之前不能以任何方式来引用未声明的变量。在let声明之前的执行瞬间被称为“暂时性死区”，在此阶段引用任何后面才声明的变量都会抛出ReferenceError。")]),t._v(" "),a("h2",{attrs:{id:"for-in-和for-of的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in-和for-of的区别"}},[t._v("#")]),t._v(" for in 和for of的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("for in 遍历的是数组的索引（index），for of 遍历的是数组的元素值（value）。")])]),t._v(" "),a("li",[a("p",[t._v("for in更适合遍历对象，遍历数组会存在一些问题（index为索引的字符串型数字，不能直接进行几何运算）")])]),t._v(" "),a("li",[a("p",[t._v("for of很适合遍历数组,"),a("strong",[t._v("不能遍历对象")]),t._v("，es6新语法，可以使用 break 和 continue 跳出循环，通过arr.keys()的方法可以打印数组的索引。")])]),t._v(" "),a("li",[a("p",[t._v("for...in用于"),a("strong",[t._v("可枚举")]),t._v("数据，比如对象、数组、字符串；")]),t._v(" "),a("p",[t._v("for...of用于"),a("strong",[t._v("可迭代")]),t._v("数据，比如数组、字符串、Map、Set；")])])]),t._v(" "),a("p",[t._v("enumerable可枚举")]),t._v(" "),a("p",[a("strong",[t._v("for in")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//for in")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//for of很适合遍历数组,不能遍历对象,error:obj is not iterable")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a,b,c")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0,1,2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[a("strong",[t._v("for of")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//for of")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//for in更适合遍历对象，遍历数组会存在一些问题（index为索引的字符串型数字，不能直接进行几何运算）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" val "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a,b,c")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//利用keys方法打印数组的索引 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0,1,2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//for of遍历Map")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'no'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yes'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" myMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Output:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false, 'no'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true, 'yes'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("p",[a("strong",[t._v("forEach")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组的迭代方法forEach")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//forEach速度比for慢，因为forEach每次都要创建一个函数调用;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" array1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narray1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//a,b,c")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"for-await-of有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-await-of有什么作用"}},[t._v("#")]),t._v(" for await...of有什么作用")]),t._v(" "),a("p",[t._v("用于遍历多个Promise ，类似promise.all。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPromisr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p2"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPromisr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPromisr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("p3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h2",{attrs:{id:"字符串的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串的常用方法"}},[t._v("#")]),t._v(" 字符串的常用方法")]),t._v(" "),a("ul",[a("li",[t._v("length返回字符串长度；")]),t._v(" "),a("li",[t._v("indexOf() 方法返回字符串中指定文本"),a("em",[t._v("首次")]),t._v("出现的索引位置（没找到返回-1）；")]),t._v(" "),a("li",[t._v("lastIndexOf() 方法返回指定文本在字符串中"),a("em",[t._v("最后")]),t._v("一次出现的索引；")]),t._v(" "),a("li",[t._v("replace() 方法用另一个值替换在字符串中指定的值；")]),t._v(" "),a("li",[t._v("concat() 连接两个或多个字符串；")]),t._v(" "),a("li",[t._v("trim() 方法删除字符串两端的空白符；")]),t._v(" "),a("li",[t._v("charAt() 方法返回字符串中指定下标（位置）的字符串；")]),t._v(" "),a("li",[t._v("可以通过 split() 将字符串转换为数组；")]),t._v(" "),a("li",[t._v("提取部分字符串的方法：\n"),a("ul",[a("li",[t._v("slice("),a("em",[t._v("start")]),t._v(", "),a("em",[t._v("end")]),t._v(")")]),t._v(" "),a("li",[t._v("substring("),a("em",[t._v("start")]),t._v(", "),a("em",[t._v("end")]),t._v(")（与slice类似，不过无法接受负索引）")]),t._v(" "),a("li",[t._v("substr("),a("em",[t._v("start")]),t._v(", "),a("em",[t._v("length")]),t._v(")")])])]),t._v(" "),a("li",[t._v("转换大小写\n"),a("ul",[a("li",[t._v("toLowerCase() 把字符串转换为小写；")]),t._v(" "),a("li",[t._v("toUpperCase() 把字符串转换为大写；")])])])]),t._v(" "),a("h2",{attrs:{id:"number的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number的常用方法"}},[t._v("#")]),t._v(" Number的常用方法")]),t._v(" "),a("ul",[a("li",[t._v("isFinite检测数组是否无穷大；")]),t._v(" "),a("li",[t._v("toFixed(x)把数字转化为字符串，结果的小数点后有指定位数的数字；")]),t._v(" "),a("li",[t._v("toString()把数组转换为字符串，括号里可以写几进制；")]),t._v(" "),a("li",[t._v("toPrecision(x)把数字格式化为指定的长度（四舍五入）；")])]),t._v(" "),a("h2",{attrs:{id:"数组的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的常用方法"}},[t._v("#")]),t._v(" 数组的常用方法")]),t._v(" "),a("p",[a("strong",[t._v("增加删除方法")])]),t._v(" "),a("ul",[a("li",[t._v("Array.push()，向数组的末尾添加一个或多个元素，并返回新的数组长度。原数组改变。")]),t._v(" "),a("li",[t._v("Array.pop()，删除并返回数组的最后一个元素，若该数组为空，则返回undefined。原数组改变")]),t._v(" "),a("li",[t._v("Array.unshift()，向数组的开头添加一个或多个元素，并返回新的数组长度。原数组改变。")]),t._v(" "),a("li",[t._v("Array.shift()，删除数组的第一项，并返回第一个元素的值。若该数组为空，则返回undefined。原数组改变。")])]),t._v(" "),a("p",[a("strong",[t._v("迭代归并方法")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Array.map(function)，原数组的每一项执行函数后，返回一个新的数组。原数组不变。（注意该方法和forEach的区别）。")])]),t._v(" "),a("li",[a("p",[t._v("Array.forEach(function)，用于调用数组的每个元素，并将元素传递给回调函数。原数组不变。（注意该方法和map的区别，若直接打印Array.forEach，结果为undefined）。")])]),t._v(" "),a("li",[a("p",[t._v("Array.filter(function)，过滤数组中，符合条件的元素并返回一个新的数组。")])]),t._v(" "),a("li",[a("p",[t._v("Array.every(function)，对数组中的每一项进行判断，若都符合则返回true，否则返回false。")])]),t._v(" "),a("li",[a("p",[t._v("Array.some(function)，对数组中的每一项进行判断，若都不符合则返回false，否则返回true。")])]),t._v(" "),a("li",[a("p",[t._v("Array.reduce(function)，reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。")])])]),t._v(" "),a("p",[a("strong",[t._v("其他方法")])]),t._v(" "),a("ol",[a("li",[t._v("Array.concat(arr1,arr2...)，合并两个或多个数组，生成一个新的数组。原数组不变。")]),t._v(" "),a("li",[t._v("Array.join()，将数组的每一项用指定字符连接形成一个字符串。默认连接字符为 “,” 逗号。")]),t._v(" "),a("li",[t._v("Array.reverse()，将数组倒序。原数组改变。")]),t._v(" "),a("li",[t._v("Array.sort()，对数组元素进行排序。按照字符串UniCode码排序，原数组改变。")]),t._v(" "),a("li",[t._v("Array.toString()，将数组转化为字符串，并返回结果；")]),t._v(" "),a("li",[t._v("Array.slice(start,end)，从start开始，end之前结束，不到end；如果不给end值，从start开始到数组结束；")]),t._v(" "),a("li",[t._v("Array.splice(index,howmany,arr1,arr2...) ，删除元素并添加元素，从index位置开始删除howmany个元素，并将arr1、arr2...数据从index位置依次插入。howmany为0时，则不删除元素。原数组改变。")]),t._v(" "),a("li",[t._v("Array.indexOf() 在数组中搜索元素并返回其位置。")]),t._v(" "),a("li",[t._v("Array.includes()检查数组是否包含指定的元素。")]),t._v(" "),a("li",[t._v("Array.isArray()检查对象是否为数组。")]),t._v(" "),a("li",[t._v("Array.fill用静态值填充数组中的元素。")])]),t._v(" "),a("h2",{attrs:{id:"对象的常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的常用方法"}},[t._v("#")]),t._v(" 对象的常用方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Object.is(value1, value2)是一种判断两个值是否相同的方法。")])]),t._v(" "),a("li",[a("p",[t._v("Object.entries() 方法返回给定对象自己的可枚举字符串键属性 [key, value] 对的数组。")])]),t._v(" "),a("li",[a("p",[t._v("Object.assign()用于将所有可枚举的自身属性从一个或多个源对象复制到目标对象。")])]),t._v(" "),a("li",[a("p",[t._v("Object.prototype.hasOwnProperty()hasOwnProperty() 方法返回一个布尔值，指示对象是否具有指定的属性作为它自己的属性。")])]),t._v(" "),a("li",[a("p",[t._v("Object.freeze()方法冻结一个对象，这意味着它不能再被更改。")])])]),t._v(" "),a("p",[t._v("isPrototypeOf")]),t._v(" "),a("p",[t._v("propertyIsEnumerable")]),t._v(" "),a("p",[t._v("toString")]),t._v(" "),a("h2",{attrs:{id:"this指向问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this指向问题"}},[t._v("#")]),t._v(" this指向问题")]),t._v(" "),a("p",[t._v("在标准函数中，this引用的是把函数当成方法调用的上下文对象，这时候通常称其为this值（在网页的全局上下文中调用函数时，this指向windows）。")]),t._v(" "),a("p",[t._v("普通函数下的this:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("在普通函数中的this始终指向的是调用它的对象")]),t._v("，在默认情况下，this指的是window；")]),t._v(" "),a("li",[t._v("在严格模式下,没有直接调用者的函数中的this是 undefined使用；")]),t._v(" "),a("li",[t._v("call,apply,bind(ES5新增)绑定的,this指的是 绑定的对象。")])]),t._v(" "),a("p",[a("strong",[t._v("在箭头函数中，指向它的父级作用域")]),t._v("，而不是调用它对象，this的指向绑定的时机是有区别的，箭头函数在定义时已经绑定，普通函数只会在调用时确定。")]),t._v(" "),a("p",[a("strong",[t._v("this绑定的优先级")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("new绑定是指函数的构造调用；")])]),t._v(" "),a("li",[a("p",[t._v("显示绑定是call，apply，bind；")])]),t._v(" "),a("li",[a("p",[t._v("隐式绑定是对象调用方法，obj.foo();这种；")])]),t._v(" "),a("li",[a("p",[t._v("默认绑定：直接使用而不带任何修饰的函数调用，一般指向window，严格模式是undefined。")])])]),t._v(" "),a("p",[a("strong",[t._v("new 绑定 > 显示绑定 > 隐式绑定 > 默认绑定")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"call-apply-bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call-apply-bind"}},[t._v("#")]),t._v(" call apply bind")]),t._v(" "),a("p",[t._v("call 、bind 、 apply 这三个函数的第一个参数都是 this 的指向对象，不传参数指向全局window对象，第二个参数差别就来了：")]),t._v(" "),a("blockquote",[a("p",[t._v("call 的参数是直接放进去的，第二第三第 n 个参数全都用逗号分隔，直接放到后面 ,obj.myFun.call(db,'成都', ... ,'string' )。")])]),t._v(" "),a("blockquote",[a("p",[t._v("apply 的所有参数都必须放在一个数组里面传进去 ,obj.myFun.apply(db,['成都', ..., 'string' ])。")])]),t._v(" "),a("blockquote",[a("p",[t._v("bind返回的是一个新的函数，必须要调用它才会被执行。 除了返回是函数以外，它的参数和 call 一样，用逗号分隔开来。")])]),t._v(" "),a("p",[t._v("当然，三者的参数不限定是 string 类型，允许是各种类型，包括函数 、 object 等等！")]),t._v(" "),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),a("p",[t._v("所有的自由变量的查找，是在函数定义的地方，向上级作用域查找，不是在执行的地方。")]),t._v(" "),a("p",[a("strong",[t._v("本质就是上级作用域内变量的生命周期，因为被下级作用域内引用，而没有被释放。就导致上级作用域内的变量，等到下级作用域执行完以后才正常得到释放。")])]),t._v(" "),a("p",[a("strong",[t._v("实际应用")])]),t._v(" "),a("ul",[a("li",[t._v("闭包隐藏数据，只提供API；")]),t._v(" "),a("li",[t._v("柯里化；")])]),t._v(" "),a("h2",{attrs:{id:"用new-做到函数的构造调用后-js做了什么工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用new-做到函数的构造调用后-js做了什么工作"}},[t._v("#")]),t._v(" 用new 做到函数的构造调用后，js做了什么工作")]),t._v(" "),a("ol",[a("li",[t._v("创建一个新对象。")]),t._v(" "),a("li",[t._v("把这个新对象的__proto__属性指向 原函数的prototype属性。(即继承原函数的原型)")]),t._v(" "),a("li",[t._v("将这个新对象绑定到 此函数的this上 。")]),t._v(" "),a("li",[t._v("返回新对象，如果这个函数没有返回其他对象。")])]),t._v(" "),a("h2",{attrs:{id:"箭头函数的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数的优点"}},[t._v("#")]),t._v(" 箭头函数的优点")]),t._v(" "),a("p",[t._v("语法更加简洁，解决了this的指向问题，原生的写法this指向的是调用者，箭头函数this绑定的是定义时的那个对象。")]),t._v(" "),a("h2",{attrs:{id:"箭头函数的缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数的缺点"}},[t._v("#")]),t._v(" 箭头函数的缺点")]),t._v(" "),a("ol",[a("li",[t._v("没有arguments；")]),t._v(" "),a("li",[t._v("无法通过apply，call，bind改变this；")]),t._v(" "),a("li",[t._v("不适用的场景：对象方法、对象原型、构造函数、Vue生命周期、Vue的method、动态上下文的回调函数；")]),t._v(" "),a("li",[t._v("某些箭头函数代码难以阅读；")])]),t._v(" "),a("h2",{attrs:{id:"宏任务和微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务和微任务"}},[t._v("#")]),t._v(" 宏任务和微任务")]),t._v(" "),a("p",[t._v("宏任务：如setTimeout、setInterva、l网络请求；")]),t._v(" "),a("p",[t._v("微任务：如promise、async/await")]),t._v(" "),a("p",[a("strong",[t._v("微任务在下一轮DOM渲染之前执行，宏任务在之后执行。")])]),t._v(" "),a("h2",{attrs:{id:"promise-all和promise-race的区别的使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-all和promise-race的区别的使用场景"}},[t._v("#")]),t._v(" Promise.all和Promise.race的区别的使用场景")]),t._v(" "),a("p",[t._v("（1）Promise.all Promise.all可以将多个Promise实例包装成一个新的Promise实例。同时，成功和失败的返回值是不同的，成功的时候返回的是一个结果数组，而失败的时候则返回最先被reject失败状态的值。")]),t._v(" "),a("p",[t._v("Promise.all中传入的是数组，返回的也是是数组，并且会将进行映射，传入的promise对象返回的值是按照顺序在数组中排列的，但是注意的是他们执行的顺序并不是按照顺序的，除非可迭代对象为空。")]),t._v(" "),a("p",[t._v("需要注意，Promise.all获得的成功结果的数组里面的数据顺序和Promise.all接收到的数组顺序是一致的，这样当遇到发送多个请求并根据请求顺序获取和使用数据的场景，就可以使用Promise.all来解决。")]),t._v(" "),a("p",[t._v("（2）Promise.race")]),t._v(" "),a("p",[t._v("顾名思义，Promse.race就是赛跑的意思，意思就是说，Promise.race([p1, p2, p3])里面哪个结果获得的快，就返回那个结果，不管结果本身是成功状态还是失败状态。当要做一件事，超过多长时间就不做了，可以用这个方法来解决：Promise.race([promise1,timeOutPromise(5000)]).then(res=>{});")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"async-await"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" async/await")]),t._v(" "),a("ul",[a("li",[t._v("await只能在async函数中使用，不然会报错")]),t._v(" "),a("li",[t._v("async函数返回的是一个状态为fuifilled的Promise对象，有无值看有无return值")]),t._v(" "),a("li",[t._v("await后面只有接了Promise才能实现排队效果")]),t._v(" "),a("li",[t._v("async/await作用是用同步方式，执行异步操作")])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"原型和原型链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原型和原型链"}},[t._v("#")]),t._v(" 原型和原型链")]),t._v(" "),a("p",[t._v("对应名称")]),t._v(" "),a("p",[t._v("prototype：原型")]),t._v(" "),a("p",[a("strong",[t._v("proto")]),t._v(":原型链")]),t._v(" "),a("p",[t._v("从属关系")]),t._v(" "),a("p",[t._v("对象的__proto__保存着该对象的构造函数的prototype，Object---\x3e构造函数---\x3e普通函数，普通函数的原型链与其构造函数的原型完全相等。最下面的普通函数没有原型，只有原型链，Object原型上的原型链已经到顶部，为null。")]),t._v(" "),a("h2",{attrs:{id:"内存泄漏的场景-vue为例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏的场景-vue为例"}},[t._v("#")]),t._v(" 内存泄漏的场景（Vue为例）")]),t._v(" "),a("ul",[a("li",[t._v("被全局变量、函数引用，组件销毁时未清除；")]),t._v(" "),a("li",[t._v("被全局事件、定时器引用，组件销毁是未清除；")]),t._v(" "),a("li",[t._v("被自定义事件引用，销毁组件时未清除；")])]),t._v(" "),a("h2",{attrs:{id:"weakmap和weakset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap和weakset"}},[t._v("#")]),t._v(" WeakMap和WeakSet")]),t._v(" "),a("p",[t._v("WeakMap的Key只能是引用类型。")]),t._v(" "),a("h2",{attrs:{id:"什么是json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是json"}},[t._v("#")]),t._v(" 什么是JSON")]),t._v(" "),a("ul",[a("li",[t._v("JSON 是一种轻量级的数据交换格式。")]),t._v(" "),a("li",[t._v("JSON 格式化后为 JavaScript 对象。")])]),t._v(" "),a("p",[t._v("JSON.parse()用于将一个 JSON 字符串转换为 JavaScript 对象。")]),t._v(" "),a("p",[t._v("JSON.stringify()用于将 JavaScript 值转换为 JSON 字符串。")]),t._v(" "),a("h2",{attrs:{id:"script-标签中-defer-和-async-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-标签中-defer-和-async-的区别"}},[t._v("#")]),t._v(" script 标签中 defer 和 async 的区别？")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("script")]),t._v(" ：会阻碍 HTML 解析，只有下载好并执行完脚本才会继续解析 HTML。")]),t._v(" "),a("li",[a("code",[t._v("async script")]),t._v(" ：解析 HTML 过程中进行脚本的异步下载，下载成功立马执行，有可能会阻断 HTML 的解析。")]),t._v(" "),a("li",[a("code",[t._v("defer script")]),t._v("：完全不会阻碍 HTML 的解析，解析完成之后再按照顺序执行脚本。")])]),t._v(" "),a("p",[t._v("您好，我叫李天遥，是22届的应届毕业生，学的专业是金融工程，接触前端有一年多了，有一直在自学，之前在厦门的稿定设计实习，主要负责杭州花瓣网的设计赛事的业务和设计工坊的开发，主要的技术栈是vue，实习四个月，现在是想去杭州发展。")])])}),[],!1,null,null,null);s.default=e.exports}}]);